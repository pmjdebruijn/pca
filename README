Private Certification Authority
===============================

Important characteristics

 * Written as a dash compatible Bourne shell script (trivially adaptable)
 * Only has limited error handling
 * Has not been exhaustively tested
 * Has not been audited by a third party (but should be fairly easy to audit)
 * Depends on GNU TLS' certtool
 * Only handles basic revocation through a CRL (no OCSP)

Critical considerations for use

 * Consider operating an authority from a LUKS encrypted partition
 * You need to verify the correct operation of the script on your particular system
 * You need to trust GNU TLS' key generation
 * You need to trust your systems entropy
   Consider looking into using a hardware entropy source like a ChaosKey (from Altus Metrum)
   Particularly for generating the authorities themselves (as these are long lived private keys)


Basic Usage
-----------

Download and install:

$ sudo apt-get install gnutls-bin gnupg git
$ sudo wget https://raw.githubusercontent.com/pmjdebruijn/pca/master/pca -o /usr/local/bin/pca
$ sudo chmod 755 /usr/local/bin/pca

Create a new root certification authority:

$ pca -c US -o 'ACME Corporation' Anvil

Create a new (optional) intermediate certification authority (under our previously created root):

$ pca -c US -o 'ACME Corporation' -i Anvil Hammer

Create a simple server certificate:

$ pca -c US -o 'Example, Inc.' anvil/hammer example.org

Create a server certificate including an additional subdomain:

$ pca -c US -o 'Example, Inc.' -d www.example.org anvil/hammer example.org

Create a server certificate including multiple additional subdomains:

$ pca -c US -o 'Example, Inc.' -d 'www.example.org www2.example.org www3.example.org' anvil/hammer example.org

Create multiple server certificates with the same domain name:

$ pca -n www.example.org anvil/hammer www.example.org_1
$ pca -n www.example.org anvil/hammer www.example.org_2
$ pca -n www.example.org anvil/hammer www.example.org_3

Generate (remote) certificate signing request to sign:

$ openssl req -nodes -newkey rsa:2048 -sha256 -keyout example-org.key -out example-org.csr -subj "/C=US/ST=California/L=Sacramento/O=ACME Corporation/CN=example.org"
$ mkdir -p anvil/hammer/example-org; cp example-org.csr anvil/hammer/example-org
$ pca anvil/hammer example-org

Revoke a certificate:

$ pca -r anvil/hammer example.org

Show certification authority hierarchical structure:

$ find -type d anvil
./anvil
./anvil/hammer
./anvil/hammer/example-org

Note that the last parameter is used for a certificates' CN as-is, including capitilisation and spaces if quoted are used.
The script also uses the last parameter for its directory structure (but applies some normalisation, like caps removal).
Therefore the authorities can be referred to using their normalised names after they have been created.
